spring:
  main:
    allow-bean-definition-overriding: true
  
  profiles:
    active: dev

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/s3playground
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
  data:
    redis:
      host: localhost
      port: 6379

---
# Keycloak Profile
spring:
  config:
    activate:
      on-profile: keycloak
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:image-storage-app}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:your-client-secret}
            scope: openid,profile,email,roles
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8081/realms/image-storage}
            authorization-uri: ${KEYCLOAK_AUTH_URI:http://localhost:8081/realms/image-storage/protocol/openid-connect/auth}
            token-uri: ${KEYCLOAK_TOKEN_URI:http://localhost:8081/realms/image-storage/protocol/openid-connect/token}
            user-info-uri: ${KEYCLOAK_USERINFO_URI:http://localhost:8081/realms/image-storage/protocol/openid-connect/userinfo}
            jwk-set-uri: ${KEYCLOAK_JWK_URI:http://localhost:8081/realms/image-storage/protocol/openid-connect/certs}
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8081/realms/image-storage}
          jwk-set-uri: ${KEYCLOAK_JWK_URI:http://localhost:8081/realms/image-storage/protocol/openid-connect/certs}

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop